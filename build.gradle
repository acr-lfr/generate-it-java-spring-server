plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'checkstyle'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
}

group = 'com.acrontum'
version = '0.0.1-SNAPSHOT'
description = 'sprint-boot-testcontainers'
sourceCompatibility = '17'

ext {
    set('springCloudVersion', "2021.0.1")
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.projectlombok:lombok'
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.mapstruct:mapstruct:1.5.0.RC1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.7'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql:42.3.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter:1.16.3'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.0.RC1'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

checkstyle {
    configFile = file("${rootDir}/checkstyle.xml")
    toolVersion '10.1'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.required=true
        csv.required=false
    }
}

sonarqube {
    properties {
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/*.xml"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.exclusions", ['**/dtos/*', '**/models/*']
    }
}

{%-set camel_case_operation = _.camelCase(_.deburr(operation_name)).replace(' ','')-%}
{%-set pascal_case_operation = ucFirst(camel_case_operation)-%}

package com.acrontum.template.controllers;

import com.acrontum.spring.lib.AcrontumComponent;
import com.acrontum.spring.lib.security.JwtPrincipal;
import com.acrontum.template.dtos.{{ pascal_case_operation }}Dto;
import com.acrontum.template.mappers.{{ pascal_case_operation }}Mapper;
import com.acrontum.template.models.{{ pascal_case_operation }}Model;
import com.acrontum.template.services.{{ pascal_case_operation }}Service;
import java.util.List;
import javax.validation.Valid;
import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

/**
 * The type {{ pascal_case_operation }} controller.
 */
@RestController
@RequestMapping("/{{ operation_name }}s")
@RequiredArgsConstructor
public class {{ pascal_case_operation }}Controller extends AcrontumComponent {

    private final {{ pascal_case_operation }}Service {{ camel_case_operation }}Service;
    private final {{ pascal_case_operation }}Mapper {{ camel_case_operation }}Mapper;

    /**
     * Gets all.
     *
     * @return the all
     */
    @GetMapping
    public List<{{ pascal_case_operation }}Dto> getAll() {
        List<{{ pascal_case_operation }}Model> {{ camel_case_operation }}s = this.{{ camel_case_operation }}Service.findAll();
        return this.{{ camel_case_operation }}Mapper.toDto({{ camel_case_operation }}s);
    }

    /**
     * Get {{ camel_case_operation }} by id.
     *
     * @param id the id
     */
    @GetMapping("/{id}")
    public {{ pascal_case_operation }}Dto getById(@PathVariable("id") Integer id) {
        return this.{{ camel_case_operation }}Mapper.toDto(this.{{ camel_case_operation }}Service.getById(id));
    }

    /**
     * Create {{ camel_case_operation }} dto.
     *
     * @param {{ camel_case_operation }}Dto the {{ camel_case_operation }} dto
     * @param {{ camel_case_operation }}    the {{ camel_case_operation }}
     * @return the {{ camel_case_operation }} dto
     */
    @PostMapping
    @ResponseStatus(HttpStatus.CREATED)
    public {{ pascal_case_operation }}Dto create{{ pascal_case_operation }}(@RequestBody @Valid {{ pascal_case_operation }}Dto {{ camel_case_operation }}Dto,
            @AuthenticationPrincipal JwtPrincipal {{ camel_case_operation }}) {
        {{ pascal_case_operation }}Model {{ camel_case_operation }}Saved =
                this.{{ camel_case_operation }}Service.save(this.{{ camel_case_operation }}Mapper.toEntity({{ camel_case_operation }}Dto));
        return this.{{ camel_case_operation }}Mapper.toDto({{ camel_case_operation }}Saved);
    }

    /**
     * Updates {{ camel_case_operation }} dto.
     *
     * @param {{ camel_case_operation }}Dto the {{ camel_case_operation }} dto
     * @param {{ camel_case_operation }}    the {{ camel_case_operation }}
     * @return the {{ camel_case_operation }} dto
     */
    @PatchMapping
    public {{ pascal_case_operation }}Dto update{{ pascal_case_operation }}(@RequestBody @Valid {{ pascal_case_operation }}Dto {{ camel_case_operation }}Dto,
            @AuthenticationPrincipal JwtPrincipal {{ camel_case_operation }}) {
        {{ pascal_case_operation }}Model {{ camel_case_operation }}Saved =
                this.{{ camel_case_operation }}Service.save(this.{{ camel_case_operation }}Mapper.toEntity({{ camel_case_operation }}Dto));
        return this.{{ camel_case_operation }}Mapper.toDto({{ camel_case_operation }}Saved);
    }

    /**
     * Delete {{ camel_case_operation }}.
     *
     * @param id the id
     */
    @DeleteMapping("/{id}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void delete{{ pascal_case_operation }}(@PathVariable("id") Integer id) {
        this.{{ camel_case_operation }}Service.delete(id);
    }

}
